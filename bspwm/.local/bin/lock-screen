#!/bin/bash

EXISTING_DPMS_OFF=$(xset q | awk '/Off: / {print $6}')

xset dpms 5 5 5

dunstctl set-paused true

# We set a trap to kill the locker if we get killed, then start the locker and
# wait for it to exit. The waiting is not that straightforward when the locker
# forks, so we use this polling only if we have a sleep lock to deal with.
if [[ -e /dev/fd/${XSS_SLEEP_LOCK_FD:--1} ]]; then
	kill_i3locker() {
		pkill -xu $EUID "$@" i3locker
	}

	trap kill_i3locker TERM INT

	# we have to make sure the locker does not inherit a copy of the lock fd
	i3locker {XSS_SLEEP_LOCK_FD}<&-

	# now close our fd (only remaining copy) to indicate we're ready to sleep
	exec {XSS_SLEEP_LOCK_FD}<&-

	while kill_i3locker -0; do
		sleep 0.5
	done
else
	trap 'kill %%' TERM INT
	i3locker -n &
	wait
fi

xset dpms $EXISTING_DPMS_OFF $EXISTING_DPMS_OFF $EXISTING_DPMS_OFF

dunstctl set-paused false
